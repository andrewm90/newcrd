Name:         networkpolicies.crd.projectcalico.org
Namespace:    
Labels:       <none>
Annotations:  <none>
API Version:  apiextensions.k8s.io/v1
Kind:         CustomResourceDefinition
Metadata:
  Creation Timestamp:  2022-12-20T17:54:22Z
  Generation:          1
  Managed Fields:
    API Version:  apiextensions.k8s.io/v1
    Fields Type:  FieldsV1
    fieldsV1:
      f:status:
        f:acceptedNames:
          f:kind:
          f:listKind:
          f:plural:
          f:singular:
        f:conditions:
          k:{"type":"Established"}:
            .:
            f:lastTransitionTime:
            f:message:
            f:reason:
            f:status:
            f:type:
          k:{"type":"NamesAccepted"}:
            .:
            f:lastTransitionTime:
            f:message:
            f:reason:
            f:status:
            f:type:
    Manager:      kube-apiserver
    Operation:    Update
    Subresource:  status
    Time:         2022-12-20T17:54:22Z
    API Version:  apiextensions.k8s.io/v1
    Fields Type:  FieldsV1
    fieldsV1:
      f:spec:
        f:conversion:
          .:
          f:strategy:
        f:group:
        f:names:
          f:kind:
          f:listKind:
          f:plural:
          f:singular:
        f:scope:
        f:versions:
    Manager:         talos
    Operation:       Update
    Time:            2022-12-20T17:54:22Z
  Resource Version:  14038131
  UID:               f26b4c8f-b2ea-401a-86c1-aeb3190ae9ff
Spec:
  Conversion:
    Strategy:  None
  Group:       crd.projectcalico.org
  Names:
    Kind:       NetworkPolicy
    List Kind:  NetworkPolicyList
    Plural:     networkpolicies
    Singular:   networkpolicy
  Scope:        Namespaced
  Versions:
    Name:  v1
    Schema:
      openAPIV3Schema:
        Properties:
          API Version:
            Description:  APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            Type:         string
          Kind:
            Description:  Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            Type:         string
          Metadata:
            Type:  object
          Spec:
            Properties:
              Egress:
                Description:  The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.
                Items:
                  Description:  A Rule encapsulates a set of match criteria and an action.  Both selector-based security Policy and security Profiles reference rules - separated out as a list of rules for both ingress and egress packet matching. 
 Each positive match criteria has a negated version, prefixed with "Not". All the match criteria within a rule must be satisfied for a packet to match. A single rule can contain the positive and negative version of a match and both must be satisfied for the rule to match.
                  Properties:
                    Action:
                      Type:  string
                    Destination:
                      Description:  Destination contains the match criteria that apply to destination entity.
                      Properties:
                        Namespace Selector:
                          Description:  NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. 
 For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. 
 For NetworkPolicy, `global()` NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. 
 For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.
                          Type:  string
                        Nets:
                          Description:  Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.
                          Items:
                            Type:  string
                          Type:    array
                        Not Nets:
                          Description:  NotNets is the negated version of the Nets field.
                          Items:
                            Type:  string
                          Type:    array
                        Not Ports:
                          Description:  NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to "TCP" or "UDP".
                          Items:
                            Any Of:
                              Type:                              integer
                              Type:                              string
                            Pattern:                             ^.*
                            X - Kubernetes - Int - Or - String:  true
                          Type:                                  array
                        Not Selector:
                          Description:  NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.
                          Type:         string
                        Ports:
                          Description:  Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. 
 Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to "TCP" or "UDP".
                          Items:
                            Any Of:
                              Type:                              integer
                              Type:                              string
                            Pattern:                             ^.*
                            X - Kubernetes - Int - Or - String:  true
                          Type:                                  array
                        Selector:
                          Description:  Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. 
 Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: 
   Selector = "!has(my_label)" matches packets that are from other Calico-controlled   endpoints that do not have the label "my_label". 
   NotSelector = "has(my_label)" matches packets that are not from Calico-controlled   endpoints that do have the label "my_label". 
 The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.
                          Type:  string
                        Service Accounts:
                          Description:  ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.
                          Properties:
                            Names:
                              Description:  Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.
                              Items:
                                Type:  string
                              Type:    array
                            Selector:
                              Description:  Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.
                              Type:         string
                          Type:             object
                        Services:
                          Description:  Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. 
 Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Ports, NotPorts, Nets, NotNets or ServiceAccounts. 
 Only valid on egress rules.
                          Properties:
                            Name:
                              Description:  Name specifies the name of a Kubernetes Service to match.
                              Type:         string
                            Namespace:
                              Description:  Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.
                              Type:         string
                          Type:             object
                      Type:                 object
                    Http:
                      Description:  HTTP contains match criteria that apply to HTTP requests.
                      Properties:
                        Methods:
                          Description:  Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.
                          Items:
                            Type:  string
                          Type:    array
                        Paths:
                          Description:  Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a `exact` or a `prefix` match. The validator will check for it.
                          Items:
                            Description:  HTTPPath specifies an HTTP path to match. It may be either of the form: exact: <path>: which matches the path exactly or prefix: <path-prefix>: which matches the path prefix
                            Properties:
                              Exact:
                                Type:  string
                              Prefix:
                                Type:  string
                            Type:      object
                          Type:        array
                      Type:            object
                    Icmp:
                      Description:  ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to "ICMP" or "ICMPv6".
                      Properties:
                        Code:
                          Description:  Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.
                          Type:         integer
                        Type:
                          Description:  Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).
                          Type:         integer
                      Type:             object
                    Ip Version:
                      Description:  IPVersion is an optional field that restricts the rule to only match a specific IP version.
                      Type:         integer
                    Metadata:
                      Description:  Metadata contains additional information for this rule
                      Properties:
                        Annotations:
                          Additional Properties:
                            Type:       string
                          Description:  Annotations is a set of key value pairs that give extra information about the rule
                          Type:         object
                      Type:             object
                    Not ICMP:
                      Description:  NotICMP is the negated version of the ICMP field.
                      Properties:
                        Code:
                          Description:  Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.
                          Type:         integer
                        Type:
                          Description:  Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).
                          Type:         integer
                      Type:             object
                    Not Protocol:
                      Any Of:
                        Type:                              integer
                        Type:                              string
                      Description:                         NotProtocol is the negated version of the Protocol field.
                      Pattern:                             ^.*
                      X - Kubernetes - Int - Or - String:  true
                    Protocol:
                      Any Of:
                        Type:       integer
                        Type:       string
                      Description:  Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). 
 Must be one of these string values: "TCP", "UDP", "ICMP", "ICMPv6", "SCTP", "UDPLite" or an integer in the range 1-255.
                      Pattern:                             ^.*
                      X - Kubernetes - Int - Or - String:  true
                    Source:
                      Description:  Source contains the match criteria that apply to source entity.
                      Properties:
                        Namespace Selector:
                          Description:  NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. 
 For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. 
 For NetworkPolicy, `global()` NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. 
 For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.
                          Type:  string
                        Nets:
                          Description:  Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.
                          Items:
                            Type:  string
                          Type:    array
                        Not Nets:
                          Description:  NotNets is the negated version of the Nets field.
                          Items:
                            Type:  string
                          Type:    array
                        Not Ports:
                          Description:  NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to "TCP" or "UDP".
                          Items:
                            Any Of:
                              Type:                              integer
                              Type:                              string
                            Pattern:                             ^.*
                            X - Kubernetes - Int - Or - String:  true
                          Type:                                  array
                        Not Selector:
                          Description:  NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.
                          Type:         string
                        Ports:
                          Description:  Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. 
 Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to "TCP" or "UDP".
                          Items:
                            Any Of:
                              Type:                              integer
                              Type:                              string
                            Pattern:                             ^.*
                            X - Kubernetes - Int - Or - String:  true
                          Type:                                  array
                        Selector:
                          Description:  Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. 
 Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: 
   Selector = "!has(my_label)" matches packets that are from other Calico-controlled   endpoints that do not have the label "my_label". 
   NotSelector = "has(my_label)" matches packets that are not from Calico-controlled   endpoints that do have the label "my_label". 
 The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.
                          Type:  string
                        Service Accounts:
                          Description:  ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.
                          Properties:
                            Names:
                              Description:  Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.
                              Items:
                                Type:  string
                              Type:    array
                            Selector:
                              Description:  Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.
                              Type:         string
                          Type:             object
                        Services:
                          Description:  Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. 
 Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Ports, NotPorts, Nets, NotNets or ServiceAccounts. 
 Only valid on egress rules.
                          Properties:
                            Name:
                              Description:  Name specifies the name of a Kubernetes Service to match.
                              Type:         string
                            Namespace:
                              Description:  Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.
                              Type:         string
                          Type:             object
                      Type:                 object
                  Required:
                    action
                  Type:  object
                Type:    array
              Ingress:
                Description:  The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.
                Items:
                  Description:  A Rule encapsulates a set of match criteria and an action.  Both selector-based security Policy and security Profiles reference rules - separated out as a list of rules for both ingress and egress packet matching. 
 Each positive match criteria has a negated version, prefixed with "Not". All the match criteria within a rule must be satisfied for a packet to match. A single rule can contain the positive and negative version of a match and both must be satisfied for the rule to match.
                  Properties:
                    Action:
                      Type:  string
                    Destination:
                      Description:  Destination contains the match criteria that apply to destination entity.
                      Properties:
                        Namespace Selector:
                          Description:  NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. 
 For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. 
 For NetworkPolicy, `global()` NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. 
 For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.
                          Type:  string
                        Nets:
                          Description:  Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.
                          Items:
                            Type:  string
                          Type:    array
                        Not Nets:
                          Description:  NotNets is the negated version of the Nets field.
                          Items:
                            Type:  string
                          Type:    array
                        Not Ports:
                          Description:  NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to "TCP" or "UDP".
                          Items:
                            Any Of:
                              Type:                              integer
                              Type:                              string
                            Pattern:                             ^.*
                            X - Kubernetes - Int - Or - String:  true
                          Type:                                  array
                        Not Selector:
                          Description:  NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.
                          Type:         string
                        Ports:
                          Description:  Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. 
 Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to "TCP" or "UDP".
                          Items:
                            Any Of:
                              Type:                              integer
                              Type:                              string
                            Pattern:                             ^.*
                            X - Kubernetes - Int - Or - String:  true
                          Type:                                  array
                        Selector:
                          Description:  Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. 
 Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: 
   Selector = "!has(my_label)" matches packets that are from other Calico-controlled   endpoints that do not have the label "my_label". 
   NotSelector = "has(my_label)" matches packets that are not from Calico-controlled   endpoints that do have the label "my_label". 
 The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.
                          Type:  string
                        Service Accounts:
                          Description:  ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.
                          Properties:
                            Names:
                              Description:  Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.
                              Items:
                                Type:  string
                              Type:    array
                            Selector:
                              Description:  Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.
                              Type:         string
                          Type:             object
                        Services:
                          Description:  Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. 
 Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Ports, NotPorts, Nets, NotNets or ServiceAccounts. 
 Only valid on egress rules.
                          Properties:
                            Name:
                              Description:  Name specifies the name of a Kubernetes Service to match.
                              Type:         string
                            Namespace:
                              Description:  Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.
                              Type:         string
                          Type:             object
                      Type:                 object
                    Http:
                      Description:  HTTP contains match criteria that apply to HTTP requests.
                      Properties:
                        Methods:
                          Description:  Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.
                          Items:
                            Type:  string
                          Type:    array
                        Paths:
                          Description:  Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a `exact` or a `prefix` match. The validator will check for it.
                          Items:
                            Description:  HTTPPath specifies an HTTP path to match. It may be either of the form: exact: <path>: which matches the path exactly or prefix: <path-prefix>: which matches the path prefix
                            Properties:
                              Exact:
                                Type:  string
                              Prefix:
                                Type:  string
                            Type:      object
                          Type:        array
                      Type:            object
                    Icmp:
                      Description:  ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to "ICMP" or "ICMPv6".
                      Properties:
                        Code:
                          Description:  Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.
                          Type:         integer
                        Type:
                          Description:  Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).
                          Type:         integer
                      Type:             object
                    Ip Version:
                      Description:  IPVersion is an optional field that restricts the rule to only match a specific IP version.
                      Type:         integer
                    Metadata:
                      Description:  Metadata contains additional information for this rule
                      Properties:
                        Annotations:
                          Additional Properties:
                            Type:       string
                          Description:  Annotations is a set of key value pairs that give extra information about the rule
                          Type:         object
                      Type:             object
                    Not ICMP:
                      Description:  NotICMP is the negated version of the ICMP field.
                      Properties:
                        Code:
                          Description:  Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.
                          Type:         integer
                        Type:
                          Description:  Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).
                          Type:         integer
                      Type:             object
                    Not Protocol:
                      Any Of:
                        Type:                              integer
                        Type:                              string
                      Description:                         NotProtocol is the negated version of the Protocol field.
                      Pattern:                             ^.*
                      X - Kubernetes - Int - Or - String:  true
                    Protocol:
                      Any Of:
                        Type:       integer
                        Type:       string
                      Description:  Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). 
 Must be one of these string values: "TCP", "UDP", "ICMP", "ICMPv6", "SCTP", "UDPLite" or an integer in the range 1-255.
                      Pattern:                             ^.*
                      X - Kubernetes - Int - Or - String:  true
                    Source:
                      Description:  Source contains the match criteria that apply to source entity.
                      Properties:
                        Namespace Selector:
                          Description:  NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. 
 For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. 
 For NetworkPolicy, `global()` NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. 
 For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.
                          Type:  string
                        Nets:
                          Description:  Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.
                          Items:
                            Type:  string
                          Type:    array
                        Not Nets:
                          Description:  NotNets is the negated version of the Nets field.
                          Items:
                            Type:  string
                          Type:    array
                        Not Ports:
                          Description:  NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to "TCP" or "UDP".
                          Items:
                            Any Of:
                              Type:                              integer
                              Type:                              string
                            Pattern:                             ^.*
                            X - Kubernetes - Int - Or - String:  true
                          Type:                                  array
                        Not Selector:
                          Description:  NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.
                          Type:         string
                        Ports:
                          Description:  Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. 
 Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to "TCP" or "UDP".
                          Items:
                            Any Of:
                              Type:                              integer
                              Type:                              string
                            Pattern:                             ^.*
                            X - Kubernetes - Int - Or - String:  true
                          Type:                                  array
                        Selector:
                          Description:  Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. 
 Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: 
   Selector = "!has(my_label)" matches packets that are from other Calico-controlled   endpoints that do not have the label "my_label". 
   NotSelector = "has(my_label)" matches packets that are not from Calico-controlled   endpoints that do have the label "my_label". 
 The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.
                          Type:  string
                        Service Accounts:
                          Description:  ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.
                          Properties:
                            Names:
                              Description:  Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.
                              Items:
                                Type:  string
                              Type:    array
                            Selector:
                              Description:  Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.
                              Type:         string
                          Type:             object
                        Services:
                          Description:  Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. 
 Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Ports, NotPorts, Nets, NotNets or ServiceAccounts. 
 Only valid on egress rules.
                          Properties:
                            Name:
                              Description:  Name specifies the name of a Kubernetes Service to match.
                              Type:         string
                            Namespace:
                              Description:  Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.
                              Type:         string
                          Type:             object
                      Type:                 object
                  Required:
                    action
                  Type:  object
                Type:    array
              Order:
                Description:  Order is an optional field that specifies the order in which the policy is applied. Policies with higher "order" are applied after those with lower order.  If the order is omitted, it may be considered to be "infinite" - i.e. the policy will be applied last.  Policies with identical order will be applied in alphanumerical order based on the Policy "Name".
                Type:         number
              Selector:
                Description:  The selector is an expression used to pick pick out the endpoints that the policy should be applied to. 
 Selector expressions follow this syntax: 
   label == "string_literal"  ->  comparison, e.g. my_label == "foo bar"   label != "string_literal"   ->  not equal; also matches if label is not present   label in { "a", "b", "c", ... }  ->  true if the value of label X is one of "a", "b", "c"   label not in { "a", "b", "c", ... }  ->  true if the value of label X is not one of "a", "b", "c"   has(label_name)  -> True if that label is present   ! expr -> negation of expr   expr && expr  -> Short-circuit and   expr || expr  -> Short-circuit or   ( expr ) -> parens for grouping   all() or the empty selector -> matches all endpoints. 
 Label names are allowed to contain alphanumerics, -, _ and /. String literals are more permissive but they do not support escape characters. 
 Examples (with made-up labels): 
                       type == "webserver" && deployment == "prod"   type in {"frontend", "backend"}   deployment != "dev"   ! has(label_name)
                Type:  string
              Service Account Selector:
                Description:  ServiceAccountSelector is an optional field for an expression used to select a pod based on service accounts.
                Type:         string
              Types:
                Description:  Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress are present in the policy.  The default is: 
 - [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are   also no Ingress rules) 
 - [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules 
 - [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules. 
 When the policy is read back again, Types will always be one of these values, never empty or nil.
                Items:
                  Description:  PolicyType enumerates the possible values of the PolicySpec Types field.
                  Type:         string
                Type:           array
            Type:               object
        Type:                   object
    Served:                     true
    Storage:                    true
Status:
  Accepted Names:
    Kind:       NetworkPolicy
    List Kind:  NetworkPolicyList
    Plural:     networkpolicies
    Singular:   networkpolicy
  Conditions:
    Last Transition Time:  2022-12-20T17:54:22Z
    Message:               no conflicts found
    Reason:                NoConflicts
    Status:                True
    Type:                  NamesAccepted
    Last Transition Time:  2022-12-20T17:54:22Z
    Message:               the initial names have been accepted
    Reason:                InitialNamesAccepted
    Status:                True
    Type:                  Established
  Stored Versions:
    v1
Events:  <none>
